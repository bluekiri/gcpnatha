# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{% set COMPUTE_URL_BASE = 'https://www.googleapis.com/compute/v1' %}

resources:
#reservation external ip
- name: nat-{{ properties["id"] }}-external
  type: compute.v1.address
  properties:
    region: {{ properties["region"] }}
    addressType: EXTERNAL
#reservation internal ip
- name: nat-{{ properties["id"] }}-internal
  type: compute.v1.address
  properties:
    region: {{ properties["region"] }}
    subnetwork: $(ref.{{ properties["vpcName"] }}-subnetwork-{{ properties["region"] }}.selfLink)
    addressType: INTERNAL
#instancetemplate
- name: template-nat-{{ properties["id"] }}
  type: compute.v1.instanceTemplate
  properties:
    properties:
      machineType: {{ properties["machineType"] }}
      canIpForward: true
      metadata:
        items:
          - key: startup-script
            value: |
              {{ imports['startup.sh']|indent(14) }}
      tags:
        items:
          - natgw
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          sourceImage: '{{ COMPUTE_URL_BASE }}/projects/debian-cloud/global/images/{{ properties["machineImage"] }}'
          diskType: {{ properties["diskType"] }}
          diskSizeGb: {{ properties["diskSize"] }}
      canIpForward: true
      networkInterfaces:
      - network: '{{ COMPUTE_URL_BASE }}/projects/{{ projectName }}/global/networks/default'
        network: $(ref.{{ properties["vpcName"] }}.selfLink)
        subnetwork: $(ref.{{ properties["vpcName"] }}-subnetwork-{{ properties["region"] }}.selfLink)
        networkIP: $(ref.nat-{{ properties["id"] }}-internal.address)
        accessConfigs:
          - name: External-IP
            type: ONE_TO_ONE_NAT
            natIP: $(ref.nat-{{ properties["id"] }}-external.address)
#instance-group
- name: instance-group-nat-{{ properties["id"] }}
  type: compute.beta.instanceGroupManager
  properties:
    instanceTemplate: $(ref.template-nat-{{ properties["id"] }}.selfLink)
    baseInstanceName: "nat-{{ properties["id"] }}"
    zone: {{ properties["zone"] }}
    targetSize: 1
    autoHealingPolicies:
      - healthCheck: $(ref.nat-health-check.selfLink)
        InitialDelaySec: 120
#routes
- type: compute.v1.route
  name: nat-route-{{ properties["id"] }}
  properties:
    network: $(ref.{{ properties["vpcName"] }}.selfLink)
    priority: 800
    destRange: 0.0.0.0/0
    nextHopIp: $(ref.nat-{{ properties["id"] }}-internal.address)
    tags:
      - {{ properties["routeTag"] }}